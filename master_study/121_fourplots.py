plt.figure(figsize=(12, 8))

plt.subplot(2, 2, 1)
plt.plot(turnsAll, numParticlesRemainingPerTurn)
plt.xlabel('Number of Turns')
plt.ylabel('Number of Survivors')
plt.title('Population at each turn')

plt.subplot(2, 2, 2)
plt.plot(amplitudeList, intactTurnsPerAmp)
plt.xlabel('Amplitude (\sigma)')
plt.ylabel('Number of Intact Turns')
plt.title('Number of turns for each amplitude before any particles are lost')

plt.subplot(2, 2, 3)
plt.plot(turnsAll, minAmpWithLosses)
plt.xlabel('Number of Turns')
plt.ylabel('Min Amplitude of Losses (\sigma)')
# plt.ylim(7, 25)
plt.title('Amplitude Thresholds')
DA = minAmpWithLosses.min()
indxDA = np.argmin(minAmpWithLosses)
plt.plot(turnsAll[indxDA], DA, 'r*')
plt.text(turnsAll[indxDA], DA, f'DA = {DA}', horizontalalignment='center', verticalalignment='top')

plt.subplot(2, 2, 4)
AMPS, TURNS = np.meshgrid(amplitudeList, turnsCoarser)
P = plt.pcolor(TURNS, AMPS, numParticlesAmpCoarser.transpose(), shading='auto')
plt.xlabel('Number of Turns')
plt.ylabel('Amplitude (\sigma)')
C = plt.colorbar(P)
C.set_label("Num. Surviving Particles")
plt.title('Particle Survival')

plt.tight_layout()
plt.show()